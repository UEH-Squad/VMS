<div class="pop-up">
    <div class="center-screen">
        <div class="pop-up-container border-10 @(!Result.IsApprove ? "d-block" : "d-none")">
            <div @onclick="CloseModalAsync" class="close-btn">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="content">
                <h3 class="mb-3"><span>Duyệt </span>hoạt động</h3>
                <div>
                    <div class=" d-flex align-items-center div-checkbox">
                        <input @bind="Result.IsPoint" id="pointTraining" class="check-box" type="checkbox">
                        <label for="pointTraining" class="ms-2">Cập nhật mã vạch</label>
                    </div>
                    <div class=" d-flex align-items-center div-checkbox">
                        <input @bind="Result.IsDay" id="dayVolunteer" class="check-box" type="checkbox">
                        <label for="dayVolunteer" class="ms-2">Ghi nhận ngày tình nguyện</label>
                        <input @bind="Result.NumberOfDays" type="number" min="0" class="form-control input-number"/>
                    </div>
                </div>
            </div>
            <div class="pop-up-btn">
                <div @onclick="ApproveSuccessAsync" class="btn accept px-0 mx-auto">Duyệt</div>
            </div>
        </div>

        <div class="pop-up-container border-10 @(!Result.IsApprove ? "d-none" : "d-block")">
            <div @onclick="CloseModalAsync" class="close-btn-s">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="pop-up-content">
                <h3>Bạn đã <span>duyệt hoạt động</span></h3>
                <h3>thành công</h3>
            </div>
        </div>
    </div>
</div>

@code {
    public class ApproveResult
    {
        public bool IsApprove { get; set; }
        public bool IsPoint { get; set; }
        public bool IsDay { get; set; }
        public int NumberOfDays { get; set; }
    }

    [CascadingParameter]
    public BlazoredModalInstance Modal { get; set; }

    [Parameter] public ApproveResult Result { get; set; } = new();

    private async Task CloseModalAsync()
    {
        await Modal.CloseAsync(ModalResult.Ok<ApproveResult>(Result));
    }

    private async Task ApproveSuccessAsync()
    {
        Result.IsApprove = true;
        await CloseModalAsync();
    }
}

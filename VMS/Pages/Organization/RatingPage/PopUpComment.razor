@using VMS.Application.ViewModels

<div class="overlay">
    <div class="popup-comment">
        <div class="popup-comment_icon">
            <span @onclick="(async () => await CloseModalAsync())" class="material-icons">
                close
            </span>
        </div>
        <div class="popup-comment_member">
            <div class="name">
                <div class="popup-avatar">
                    <img src="@UserTop.Avatar" alt="avatar">
                </div>
                <div class="popup-member">
                    <p class="popup-member1">@UserTop.FullName</p>
                    <div class="popup-member2">
                        <VMS.Shared.Components.Star Rating=@RecruitmentRatingTop.Rank />
                    </div>
                </div>
            </div>

            @if (string.IsNullOrEmpty(RecruitmentRatingTop.Comment))
            {
                <div class="comment mb-5">
                    <p class="comment-input">Chưa nhận xét </p>
                </div>
                <div class="button">
                    <button class="button-showremind" style="color: @ColorRemind">Số lần nhắc nhở: @Count lần</button>
                    <button @onclick="@Remind" class="button-remind">
                        <span class="material-icons-outlined">notifications</span>
                        Nhắc nhở nhận xét
                    </button>
                </div>
            }
            else
            {
                <div class="comment mb-5">
                    <p class="comment-input">@RecruitmentRatingTop.Comment </p>
                </div>
            }

        </div>
        <div class="popup-comment_organization">
            <div class="name">
                <div class="popup-avatar">
                    <img src="@UserBottom.Avatar" alt="avatar">
                </div>
                <div class="popup-member">
                    <p class="popup-member1">@UserBottom.FullName</p>
                    <div class="popup-member2">
                        <VMS.Shared.Components.Star Rating=@RecruitmentRatingBottom.Rank />
                    </div>
                </div>
            </div>
            <EditForm Model="@RecruitmentRatingBottom" OnSubmit="UpdateCommentAsync" Context="CurrentContext">
                <div class="comment">
                    @if (isReadonly)
                    {
                        <InputTextArea readonly @bind-Value="@RecruitmentRatingBottom.Comment" class="comment-input" placeholder="@(string.IsNullOrEmpty(RecruitmentRatingBottom.Comment) ? "Chưa nhận xét" : "")" rows="3" />
                    }
                    else
                    {
                        <InputTextArea @bind-Value="@RecruitmentRatingBottom.Comment" class="comment-input" placeholder="@(string.IsNullOrEmpty(RecruitmentRatingBottom.Comment) ? "Chưa nhận xét" : "")" rows="3" />
                    }
                </div>
                <div class="button">
                    <button class="button-send">@(isReadonly ? "Sửa" : (isEmpty ? "Gửi nhận xét" : "Lưu"))</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    int Count = 0;
    string ColorRemind;

    private void Remind()
    {
        Count = Count + 1;
        ColorRemind = "#E10B0B";
    }
}

<div class="d-flex align-items-center profile__rank">
    @if (IsUser)
    {
        <a href="" class="d-flex align-self-center me-3" style="@(IsUsedForAdmin ? "font-size: 32px" : "")">#@Rank</a>
    }
    else
    {
        <a class="d-flex align-self-center me-3" style="@(IsUsedForAdmin ? "font-size: 32px" : "")">#@Rank</a>
    }

    <div>
        <p class="mb-2 d-flex justify-content-evenly align-self-end">
            <span class="profile__rank-number me-1" style="@(IsUsedForAdmin ? "font-size: 20px" : "")">@Stars</span>
            @for (int i = 1; i <= 5; i++)
            {
                <i class="material-icons @(Stars >= i ? "" : "icon-noColor")" style="@(IsUsedForAdmin ? "font-size: 20px" : "")">
                    star@(HaftStar(Stars, i) ? "_half" : "")
                </i>
            }
        </p>
        <span class="text-start" style="@(IsUsedForAdmin ? "font-size: 18px" : "")">@GetTotalRatingString(TotalRating) xếp hạng</span>
    </div>
</div>

@code {

    [Parameter] public bool IsUser { get; set; } = true;
    [Parameter] public double Rank { get; set; } = 0;
    [Parameter] public double TotalRating { get; set; } = 0;
    [Parameter] public double Stars { get; set; } = 0;
    [Parameter] public bool IsUsedForAdmin { get; set; }


    private static bool HaftStar(double rate, int star)
    {
        return rate - star > 0 && rate - star <= 0.5;
    }

    private string GetTotalRatingString(double TotalRating)
    {
        if (TotalRating >= 1000000)
        {
            return (int)TotalRating / 1000000 + "TR";
        }

        if (TotalRating >= 1000)
        {
            return (int)TotalRating / 1000 + "N";
        }

        return TotalRating.ToString();
    }
}

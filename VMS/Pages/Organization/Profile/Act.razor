@inject IJSRuntime JSRuntinme;

<div class="container">
    <div class="row act">
        <h1>Hoạt động <span>@Title</span></h1>
        <div class="owl-carousel owl-theme organize__carousel position-relative">
            @foreach (var item in Datas)
            {
            <div class="act-container item position-relative">
                <div class="img-container position-relative">
                    <img src="./img/OrganizationProfile/ActOrganize.png" alt="" class="act-img">
                    <div class="@(item.IsClose ? "overlay" : "")"></div>
                </div>
                <div class="act-content">
                    <a href="@Routes.ActivityInfo" class="@(item.IsClose ? "content-cl" : "content-nm")">
                        <h3 class="act-title lm-text @(item.IsClose ? "title-cl" : "title-nm")">@item.Title</h3>
                    </a>
                </div>
                <ul class="act-menu p-2 @(item.IsMenu ? "d-block" : "d-none")">
                    <li class="edit pb-2">Chỉnh sửa</li>
                    <li @onclick="DeleteConfirm" class="delete pb-2">Xóa</li>
                    <li @onclick="() => CloseConfirm(item.Id)" class="close pb-2">Đóng hoạt động</li>
                </ul>
                @if (HaveControl)
                {
                    <i @onclick="() => ShowMenu(item.Id)" class="material-icons position-absolute @(item.IsClose ? "d-none" : "")">
                        more_horiz
                    </i>
                }
            </div>
            }
        </div>
            @if (HaveDecor)
            {
                <div class="col-8">
                    <div class="bottom-line"></div>
                </div>
            }
            else
            {
                <div class="col-8 ms-auto">
                    <div class="bottom-line"></div>
                </div>
            }
    </div>
</div>

<div class="pop-up @(isDeleteConfirm ? "d-block" : "d-none")">
    <div class="center-screen ">
        <div class="pop-up-container border-10">
            <div @onclick="DeleteConfirm" class="close-btn">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="content">
                <h3>Bạn có chắc chắn muốn</h3>
                <h3><span class="delete-text">xóa hoạt động</span> này không?</h3>
            </div>
            <div class="pop-up-btn">
                <div @onclick="DeleteConfirm" class="deny">Hủy</div>
                <div @onclick="DeleteSuccess" class="accept">Xác nhận</div>
            </div>
        </div>
    </div>
</div>

<div class="pop-up @(isCloseConfirm ? "d-block" : "d-none")">
    <div class="center-screen">
        <div class="pop-up-container border-10">
            <div @onclick="() => CloseConfirm(pendingId)" class="close-btn">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="content">
                <h3>Bạn có chắc chắn muốn</h3>
                <h3><span class="close-text">đóng hoạt động</span> này không?</h3>
            </div>
            <div class="pop-up-btn">
                <div @onclick="() => CloseConfirm(pendingId)" class="deny">Hủy</div>
                <div @onclick="CloseSuccess" class="accept">Xác nhận</div>
            </div>
        </div>
    </div>
</div>

<div class="pop-up @(isDeleteSuccess ? "d-block" : "d-none")">
    <div class="center-screen">
        <div class="pop-up-container border-10">
            <div @onclick="DeleteSuccess" class="close-btn-s">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="pop-up-content">
                <h3 class="delete-act">Xoá thành công!</h3>
            </div>
        </div>
    </div>
</div>

<div class="pop-up @(isCloseSuccess ? "d-block" : "d-none")">
    <div class="center-screen">
        <div class="pop-up-container border-10">
            <div @onclick="CloseSuccess" class="close-btn-s">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="pop-up-content">
                <h3 class="close-act">Đóng hoạt động thành công!</h3>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public bool HaveControl { get; set; } = false;
    [Parameter]
    public bool HaveDecor { get; set; } = true;
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public List<FakeData> Datas { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntinme.InvokeVoidAsync("vms.OrganizeCarousel");
    }

    void ShowMenu(int Id)
    {
        Datas[Id].IsMenu = !Datas[Id].IsMenu;
    }

    bool isDeleteConfirm = false;

    void DeleteConfirm()
    {
        isDeleteConfirm = !isDeleteConfirm;
        Datas.ForEach(a => a.IsMenu = false);
    }

    bool isCloseConfirm = false;

    void CloseConfirm(int Id)
    {
        isCloseConfirm = !isCloseConfirm;
        Datas.ForEach(a => a.IsMenu = false);
        pendingId = Id;
    }

    bool isDeleteSuccess = false;

    void DeleteSuccess()
    {
        isDeleteSuccess = !isDeleteSuccess;
        if (isDeleteConfirm == true)
        {
            isDeleteConfirm = false;
        }
    }

    bool isCloseSuccess = false;

    private int pendingId = -1;

    void CloseSuccess()
    {
        isCloseSuccess = !isCloseSuccess;
        if (isCloseConfirm == true)
        {
            isCloseConfirm = false;
        }
        Datas[pendingId].IsClose = true;
        pendingId = Datas.Count - 1;
        Datas = Datas.OrderBy(x => x.IsClose).ToList();
    }
}

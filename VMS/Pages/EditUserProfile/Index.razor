@attribute [Route(Routes.EditUserProfile)]
@using System.ComponentModel.DataAnnotations;
@using VMS.Application.ViewModels;
@inject IJSRuntime JSRuntinme;

<div class="my-editProfile">
    <div class="container">
        <div class="row">
            <div class="col-10 mx-auto">
                <h1 class="editProfile__title my-3">Chỉnh sửa <span>thông tin cá nhân</span></h1>
                <div class="editProfile__logo text-center my-5">
                    <img src="img/RelatedActivities/2nd-activity.png" alt="">
                </div>
                <EditForm Model="@user" Context="CurrentEditContext" class="editProfile__form">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="row form-item">
                        <p class="col-3 form-text">Họ và tên</p>
                        <div class="col-9 px-0">
                            <InputText @bind-Value="@user.FullName" class="form-control" disabled="true" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Khóa</p>
                        <div class="col-9 px-0">
                            <InputText @bind-Value="@user.SchoolYear" class="form-control" disabled="true" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Lớp</p>
                        <div class="col-9 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Class)</div>
                            <InputText @bind-Value="@user.Class" class="form-control" />
                        </div>
                    </div>

                    <div class="row form-item">
                        @*KHOAN DỪNG KHOẢNG CHỪNG 2S*@
                        <p class="col-3 form-text">Khoa</p>
                        <div class="col-9 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Department)</div>
                            <InputText @bind-Value="@user.Department" class="form-control" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Mã số sinh viên</p>
                        <div class="col-9 px-0">
                            <InputText @bind-Value="@user.IdStudent" class="form-control" disabled="true" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Ngày sinh</p>
                        <div class="col-9 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Birthday)</div>
                            <InputText @bind-Value="@user.Birthday" class="form-control" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Email UEH</p>
                        <div class="col-9 px-0">
                            <InputText @bind-Value="@user.EmailUEH" class="form-control" disabled="true" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Email nhận thông báo</p>
                        <div class="col-9 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.EmailGetNoti)</div>
                            <InputText @bind-Value="@user.EmailGetNoti" class="form-control" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Điện thoại</p>
                        <div class="col-9 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Phone)</div>
                            <InputText @bind-Value="@user.Phone" class="form-control" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Địa chỉ</p>
                        <div class="col-9 d-flex flex-row flex-wrap flex-xl-nowrap" style="padding:0">
                            <VMS.Pages.Organization.Activities.CascadingAddressPicker />
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Address)</div>
                            <InputText @bind-Value="@user.Address" class="form-control ms-xl-2 my-address-textbox" style="width:auto" placeholder="Nhập số nhà, tên đường" />
                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Lĩnh vực</p>
                        <div class="col-9 form-field ">
                            <div class="d-flex">
                                <div class=" owl-carousel owl-theme editProfile__carousel">
                                    @foreach (var item in areas)
                                    {
                                        <div class="form-field-item item">
                                            <i class="material-icons">@item.Icon</i>
                                            <span>@item.Name</span>
                                        </div>
                                    }
                                </div>

                                <div class="form-field-item ms-auto item-add">
                                    <i class="material-icons-outlined icon-add" @onclick="ShowAreasModal">add</i>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row form-item">
                        <p class="col-3 form-text">Châm ngôn</p>
                        <div class="col-9 position-relative px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Maxim)</div>
                            <div class="col-8 px-0 w-100">
                                <InputTextareaOnInput MaxLength="@maxWord" @bind-Value="user.Maxim" class="form-input mx-0 form-control" />
                                <p class="countWord text-end mb-0">@CountWord()/@maxWord</p>
                            </div>
                        </div>
                    </div>

                    <div class="row form-item"> //để mai tính
                        <p class="col-3 form-text">Kỹ năng</p>
                        <div class="col-9 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => user.Phone)</div>
                            <InputText @bind-Value="@user.Phone" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-9 ms-auto from__btn">
                            <button class="btn from__btn-cancel">Hủy</button>
                            <button type="submit" class="btn from__btn-submit ms-5 @(CurrentEditContext.IsModified() || file != null ? "d-inline-block" : "d-none") ">Hoàn tất</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    [CascadingParameter] public IModalService Modal { get; set; }

    public class User
    {

        public string FullName { get; set; }

        public string SchoolYear { get; set; }

        public string Class { get; set; }

        public string Department { get; set; }

        public string IdStudent { get; set; }

        public string Birthday { get; set; }

        public string EmailUEH { get; set; }

        public string EmailGetNoti { get; set; }

        public string Phone { get; set; }

        public string Maxim { get; set; }

        public string Address { get; set; }
    }

    private User user = new User()
    {
        FullName = "Minh Kha Bui",
        SchoolYear ="K45",
        IdStudent ="31191025985",
        EmailUEH = "youth.bit@gmail.com",

        Class="ST001",
        Phone = "0968790812",
        Birthday ="24/07/2001",
        EmailGetNoti ="buiminhkha24072001@gmail.com",
        Maxim = "Cos lafm thif mowis cos awn."
    };

    private IBrowserFile file;

    private int maxWord = 300;

    private int CountWord()
    {
        int count = user.Maxim.Length;
        return count;
    }

    private void FileChanged(InputFileChangeEventArgs file)
    {
        this.file = file.File;

    }

    private List<AreaViewModel> areas = new List<AreaViewModel>();
    private async Task ShowAreasModal()
    {
        var options = new ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true
        };
        var areasParameter = new ModalParameters();
        areasParameter.Add("choosenAreasList", areas);
        var areasModal = Modal.Show<ActivitySearchPage.AreasPopup>("", areasParameter, options);
        await areasModal.Result;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (areas.Count > 3)
        {
            await JSRuntinme.InvokeVoidAsync("vms.EditProfileCarousel");
        }
    }

}
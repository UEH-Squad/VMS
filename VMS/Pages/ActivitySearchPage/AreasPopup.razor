<div class="modal-backdrop modal-dialog-centered justify-content-center">
    <div class="my-custom-popup position-relative">
            <span @onclick="CloseModal" class="material-icons-outlined close-btn">
                close
            </span>
    
        <h3 class="text-center mt-4 mb-4">Lĩnh Vực</h3>
        <div class="col-10 mx-auto">
            <div class="row justify-content-evenly ms-5">
                    @for (int i = 0; i < 12; i++)
                    {
                        int id = i;
                        <div class="area-item-wrapper d-flex align-items-center mb-3">
                            <span @onclick=" () => ChangeState(id)" class="material-icons-outlined d-flex align-items-center justify-content-center">
                                people
                            </span>
                            <p @onclick=" () => ChangeState(id)" class="mb-0 ms-2 @(ChoosenAreasList[id] ? "colored-green" : "")">Cộng đồng @(i+1)</p>
                        </div>
                    }
            </div>
        </div>
        <div @onclick="SaveModal" class="save-btn d-flex justify-content-center align-items-center">Lưu</div>

    </div>
</div>

@code {

    [Parameter]
    public bool[] ChoosenAreasList { get; set; }
    int numberOfItems = 12;
    bool IsThereSelectedItem = false;

    //create a curent list incase user click close button but don't save
    bool[] BoolArray = new bool[12];
    protected override async Task OnInitializedAsync()
    {
        for (int a = 0; a < numberOfItems; a++)
        {
            BoolArray[a] = ChoosenAreasList[a];
        }
    }
    void ChangeState(int id)
    {
        ChoosenAreasList[id] = !ChoosenAreasList[id];
        IsThereSelectedItem = false;
        for (int j = 0; j < numberOfItems; j++)
        {
            if (ChoosenAreasList[j])
            {
                IsThereSelectedItem = true;
            }
        }
    }

    [CascadingParameter]
    private BlazoredModalInstance AreasModal { get; set; }
    void CloseModal()
    {
        for (int j = 0; j < numberOfItems; j++)
        {
            if (ChoosenAreasList[j] && BoolArray[j] == false)
            {
                ChoosenAreasList[j] = false;
            }
            if (ChoosenAreasList[j] == false && BoolArray[j])
            {
                ChoosenAreasList[j] = true;
            }
        }
        AreasModal.CloseAsync(ModalResult.Ok(""));

    }

    void SaveModal()
    {
        ChoosenAreasList = BoolArray;
        if (IsThereSelectedItem)
        {
            AreasModal.CloseAsync(ModalResult.Ok("bg-grey"));
        }
        else
        {
            AreasModal.CloseAsync(ModalResult.Ok(""));
        }
    }
}

@attribute [Route(Routes.EditProfile)]
@using System.ComponentModel.DataAnnotations;
@using VMS.Application.ViewModels;
@inject IJSRuntime JSRuntinme;

<div class="my-editProfile">
    <div class="container">
        <div class="row">
            <div class="col-10 mx-auto">
                <h1 class="editProfile__title my-3">Chỉnh sửa <span>thông tin tổ chức</span></h1>
                <div class="editProfile__logo text-center my-5">
                    <img src="img/RelatedActivities/2nd-activity.png" alt="">
                </div>
                <EditForm Model="@organization" Context="CurrentEditContext" class="editProfile__form">
                    <div class="row form-item">
                        <p class="col-4 form-text">Tên tổ chức</p>
                        <div class="col-8 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => organization.FullName)</div>
                            <InputText @bind-Value="@organization.FullName" class="form-input form-control" />
                        </div>

                    </div>
                    <div class="row form-item">
                        <p class="col-4 form-text">Gmail</p>
                        <div class="col-8 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => organization.Email)</div>
                            <InputText @bind-Value="@organization.Email" class="form-input form-control" />
                        </div>

                    </div>
                    <div class="row form-item">
                        <p class="col-4 form-text">Điện thoại</p>
                        <div class="col-8 px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => organization.Phone)</div>
                            <InputText @bind-Value="@organization.Phone" class="form-input form-control" />
                        </div>

                    </div>
                    <div class="row form-item">
                        <p class="col-4 form-text">Lĩnh vực</p>
                        <div class="col-8 form-field ">
                            <div class="d-flex">
                                <div class=" owl-carousel owl-theme editProfile__carousel">
                                    @foreach (var item in areas)
                                    {
                                        <div class="form-field-item item">
                                            <i class="material-icons">@item.Icon</i>
                                            <span>@item.Name</span>
                                        </div>
                                    }
                                </div>

                                <div class="form-field-item ms-auto item-add">
                                    <i class="material-icons-outlined icon-add" @onclick="ShowAreasModal">add</i>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row form-item">
                        <p class="col-4 form-text">Tầm nhìn & sứ mệnh</p>
                        <div class="col-8 position-relative px-0">
                            <div class="d-none">@CurrentEditContext.FieldCssClass(() => organization.Content)</div>
                            <div class="col-8 px-0 w-100">
                                <InputTextareaOnInput MaxLength="@maxWord" @bind-Value="organization.Content" class="form-input mx-0 form-control" />
                                <p class="countWord text-end mb-0">@CountWord()/@maxWord</p>
                            </div>

                        </div>
                    </div>
                    <div class="row form-item mb-0">
                        <p class="col-4 form-text">Thay đổi ảnh</p>
                        <div class="col-8 px-0 ">
                            <UploadImg InputFileChanged="FileChanged" ShowPreview="true" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-8 ms-auto from__btn">
                            <button class="btn from__btn-cancel">Hủy</button>
                            <button type="submit" class="btn from__btn-submit ms-5 @(CurrentEditContext.IsModified() || file != null ? "d-inline-block" : "d-none") ">Hoàn tất</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    [CascadingParameter] public IModalService Modal { get; set; }

    public class Organization
    {
        [Required(ErrorMessage = "Tên tổ chức không được để trống")]
        [MinLength(2, ErrorMessage = "Tên tổ chức tối thiểu 2 kí tự")]
        [MaxLength(50, ErrorMessage = "Tên tổ chức tối đa 50 kí tự")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "Email không được để trống")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [MinLength(10, ErrorMessage = "Số điện thoại tối thiểu 10 số")]
        [MaxLength(50, ErrorMessage = "Số điện thoại tối đa 12 số")]
        public string Phone { get; set; }

        [Required(ErrorMessage = "Tầm nhìn và sứ mệnh không được để trống")]
        public string Content { get; set; }
    }

    private Organization organization = new Organization()
    {
        FullName = "Công nghệ thông tin kinh doanh",
        Email = "youth.bit@gmail.com",
        Phone = "0968790812",
        Content = "This year in Tokyo, we add to a history with the Olympics that dates back to 1896 when seven members of the Harvard community brought home eight gold medals."
    };

    private IBrowserFile file;

    private int maxWord = 300;

    private int CountWord()
    {
        int count = organization.Content.Length;
        return count;
    }

    private void FileChanged(InputFileChangeEventArgs file)
    {
        this.file = file.File;

    }

    private List<AreaViewModel> areas = new List<AreaViewModel>();
    private async Task ShowAreasModal()
    {
        var options = new ModalOptions()
        {
            HideCloseButton = true,
            DisableBackgroundCancel = true,
            UseCustomLayout = true
        };
        var areasParameter = new ModalParameters();
        areasParameter.Add("choosenAreasList", areas);
        var areasModal = Modal.Show<ActivitySearchPage.AreasPopup>("", areasParameter, options);
        await areasModal.Result;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (areas.Count > 3)
        {
            await JSRuntinme.InvokeVoidAsync("vms.EditProfileCarousel");
        }
    }

}
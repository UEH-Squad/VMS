@*<section class="pagination mb-0 mt-5">
        <ul class="mb-0">
            <li class="btn-prev"><span class="material-icons">keyboard_arrow_left</span></li>
            <li class="numb">1</li>
            <li class="dots">...</li>
            <li class="numb">4</li>
            <li class="numb">5</li>
            <li class="numb">6</li>
            <li class="dots">...</li>
            <li class="numb">10</li>
            <li class="btn-prev"><span class="material-icons">keyboard_arrow_right</span></li>
        </ul>
    </section>*@

@if (PageCount > 1)
{
    var start = CurrentPage - 1;
    var finish = CurrentPage + 1;
    bool shouldShowLeftDots = true;
    bool shouldShowRightDots = true;

    if (start < 3)
    {
        start = 2;
        finish = 4;
        shouldShowLeftDots = false;
    }

    if (finish > PageCount - 2)
    {
        start = PageCount - 3;
        finish = PageCount - 1;
        shouldShowRightDots = false;
    }

    var hasPrevious = CurrentPage > 1 && PageCount > 1;
    var hasNext = CurrentPage < PageCount;
    <nav>
        <ul class="pagination">
            @if (hasPrevious)
            {
                <li class="btn-prev" @onclick="@(() => PagerButtonClicked(CurrentPage - 1))">
                    <span class="material-icons">keyboard_arrow_left</span>
                </li>
            }
            else
            {
                <li class="btn-prev">
                    <span class="material-icons">keyboard_arrow_left</span>
                </li>
            }
            @if (ShowPageNumbers)
            {
                <li class="numb @(CurrentPage == 1 ? "active" : "")" @onclick="@(() => PagerButtonClicked(1))">1</li>

                @if (shouldShowLeftDots)
                {
                    <li class="dots">...</li>
                }

                for (var i = start; i <= finish; i++)
                {
                    var currentIndex = i;
                    if (i == CurrentPage)
                    {
                        <li class="numb active">@i</li>
                    }
                    else
                    {
                        <li class="numb" @onclick="@(() => PagerButtonClicked(currentIndex))">@currentIndex</li>
                    }
                }

                @if (shouldShowRightDots)
                {
                    <li class="dots">...</li>
                }

                <li class="numb @(CurrentPage == PageCount ? "active" : "")" @onclick="@(() => PagerButtonClicked(PageCount))">@PageCount</li>
            }
            @if (hasNext)
            {
                <li class="btn-prev" @onclick="@(() => PagerButtonClicked(CurrentPage + 1))">
                    <span class="material-icons">keyboard_arrow_right</span>
                </li>
            }
            else
            {
                <li class="btn-prev">
                    <span class="material-icons">keyboard_arrow_right</span>
                </li>
            }
        </ul>
    </nav>
}

@code {

    [Parameter]
    public int PageCount { get; set; }

    [Parameter]
    public int CurrentPage { get; set; }

    [Parameter]
    public Func<int, Task> OnPageChanged { get; set; } = null;

    [Parameter]
    public bool ShowPageNumbers { get; set; } = true;

    private void PagerButtonClicked(int page)
    {
        OnPageChanged?.Invoke(page);
    }

}
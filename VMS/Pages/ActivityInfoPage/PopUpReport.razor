@attribute [Authorize]

@inject IJSRuntime JSRuntinme

<EditForm Model="report" OnValidSubmit="AddReport">
    <DataAnnotationsValidator />
    <div class="overlay">

        <div class="min-overlay @(isShowReport ? "d-block" : "d-none")">
            <div class="report-success">

                <div class="min-overlay--icon">
                    <span @onclick="ShowModalReportSucess" class="material-icons">
                        close
                    </span>
                </div>

                <div class="report-success__text">
                    <span class="green-text">Bạn đã</span>
                    <span class="blue-text">báo cáo thành công</span>
                </div>

            </div>
        </div>

        <div class="container @(isShowReport ? "d-none" : "d-block")">
            <div class="icon-close-popup">
                <span @onclick="CloseModal" class="material-icons">close</span>
            </div>

            <div class="title-header">
                <span class="title-header__report">Báo cáo</span>
                <span class="title-header__activity">hoạt động</span>
            </div>

            <div class="reporting-reason dropdown">
                <div class="title title-reason">
                    <h4 class="title-discript__text">Lý do bạn muốn báo cáo</h4>
                    <h4 class="title-discript__check check">(*)</h4>
                </div>
                <button class="btn dropdown-toggle my-btn" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                    @foreach (var line in ListReason())
                    {
                        <li>
                            <div class="dropdown-item" href="#">
                                <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(line, eventArgs.Value); }" />
                                <span>@line</span>
                            </div>
                        </li>
                    }
                </ul>
            </div>

            <div class="report-description mb-3">
                <div class="title title-discript">
                    <h4 class="title-discript__text">Mô tả về báo cáo</h4>
                    <h4 class="title-discript__check check">(*)</h4>
                </div>
                <InputTextArea @bind-Value="@report.DesReport" class="form-control" id="exampleFormControlTextarea1" rows="10"></InputTextArea>
            </div>

            <div class="attached-proof">
                <div class="title title-attach">
                    <h4 class="title-attach__text">Minh chứng đính kèm</h4>
                    <h4 class="title-attach__check check"> (*)</h4>
                </div>
                <div class="add-file">
                    <div class="add-file__block">
                        <InputFile OnChange="OnInputFileChangeAsync" id="file" class="inputfile" />
                        @if (!string.IsNullOrEmpty(message))
                        {
                            <span style="color: red">@message</span>
                        }
                        @if (!string.IsNullOrEmpty(image))
                        {
                            <img src="@image" />
                        }
                        <label for="file">
                            <span class="block-icon-text">
                                <span class="material-icons my-icon-upload">cloud_upload</span>
                                <span class="file__text">Kéo hoặc thả hình ảnh liên quan tại đây</span>
                            </span>
                        </label>
                    </div>

                </div>
            </div>

            <div class="btn-accept">
                <button @onclick="ShowModalReportSucess" type="submit" class="btn" data-bs-toggle="modal" data-bs-target="#exampleModal1">
                    Báo cáo hoạt động
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [CascadingParameter]
    private BlazoredModalInstance ReportModal { get; set; }
    void CloseModal()
    {
        ReportModal.CloseAsync();
    }

    bool isShowReport = false;
    void ShowModalReportSucess()
    {
        isShowReport = !isShowReport;
        if (isShowReport == false)
        {
            ReportModal.CloseAsync();
        }
    }
}

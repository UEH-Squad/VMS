@inject IJSRuntime JSRuntinme;

<div class="my-rank">
    <div class="container position-relative">
        <h1>Đại lộ <span>danh vọng</span></h1>
        <a @onclick="showOrg" class="rank__link-organization">Tổ chức</a>
        <a @onclick="showPer" class="rank__link-students">Sinh viên</a>
        <div class=" owl-carousel owl-theme rank__owlcrousel rank__owlcrousel-organization px-5">
            @foreach (var item in organizations)
            {
                <div class="item row">
                    <div class="rank__img-rank">
                        <img src="img/rank.png" alt="">
                        <span>@item.Id</span>
                    </div>
                    <div class="col-7 mx-auto py-3 text-center">
                        <div class="rank__img m-auto pb-3">
                            <img class="mx-auto" src="@item.Banner" alt="">
                        </div>
                        <p class="rank__name">@item.Name</p>
                        <span class="rank__review">@item.Rank</span>
                        <div class="d-flex justify-content-between px-2 mb-2">
                            <div class="rank__act">
                                <p>@item.NumberOfActivities</p>
                                <span>Hoạt động</span>
                            </div>
                            <div class="rank__star">
                                <p>@item.StarRating</p>
                                @for (int i = 0; i <= 5; i++)
                                {
                                    if (i <= item.StarRating)
                                    {
                                        <i class="material-icons">star_rate</i>
                                    }
                                    else
                                    {
                                        <i class="material-icons star-noColor">star_rate</i>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div>
                        <svg class="rank__cup" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" style="vertical-align: -0.125em;" width="1.07em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 17 16"><path d="M11.969 1H3.082v1.031h-3.09v4.836c0 1.869 2.086 3.407 4.133 3.567c.672.72 1.854 1.243 2.906 1.466v1.264c-1.006.309-2.803 1.035-2.906 1.826h6.904c-.104-.791-2.084-1.518-3.092-1.826V11.9c1.056-.223 2.291-.746 2.964-1.466c2.046-.16 4.04-1.698 4.04-3.567V2.031h-2.972V1zM.941 2.947H3.01v4.166c0 .822.212 1.604.585 2.308C2.047 8.928.941 7.658.941 6.172V2.947zm8.104 5.081l-1.544-.851l-1.546.851l.295-1.8L5 4.954l1.727-.263l.774-1.636l.772 1.636L10 4.954L8.75 6.228l.295 1.8zm2.295 1.526c.375-.736.59-1.55.59-2.411V2.974h2.074V6.16c0 1.553-1.111 2.879-2.664 3.394z" fill="currentColor" fill-rule="evenodd" /></svg>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {

    class FakeData
    {
        public int Id { get; set; }
        public string Banner { get; set; }
        public string Name { get; set; }
        public string Rank { get; set; }
        public int NumberOfActivities { get; set; }
        public int StarRating { get; set; }
    }

    List<FakeData> organizations = new();

    protected override void OnInitialized()
    {
        organizations.AddRange(GetData(0));
    }

    /// <summary>
    /// Get data for carousel
    /// </summary>
    /// <param name="type">0 for organizations; 1 for students</param>
    /// <returns></returns>
    IEnumerable<FakeData> GetData(int type)
    {
        return Enumerable.Range(1, 10).Select(id => new FakeData()
        {
            Id = id,
            Banner = type == 0 ? "./img/BIT.jpg" : "./img/RelatedActivities/2nd-activity.png",
            Name = " PHẠM THỊ NGỌC ÁNH",
            Rank = "Chiến sĩ năng động",
            NumberOfActivities = 12,
            StarRating = 4
        });
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntinme.InvokeVoidAsync("vms.RankCarousel");
    }

    void showOrg()
    {
        organizations = GetData(0).ToList();
    }

    void showPer()
    {
        organizations = GetData(1).ToList();
    }
}
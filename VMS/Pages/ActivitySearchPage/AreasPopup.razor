<div class="modal-backdrop modal-dialog-centered justify-content-center">
    <div class="my-custom-popup position-relative d-flex flex-column justify-content-between align-items-center">
            <span @onclick="CloseModal" class="material-icons-outlined close-btn">
                close
            </span>
    
        <h3 class="text-center mt-4 mb-4">Lĩnh Vực</h3>
        <div class="col-10 areas-modal-content">
            <div class="areas-modal-content__container">
                @for (int i = 0; i < numberOfItems; i++)
                {
                    int id = i;
                    if (id == 0) //for Covid-19 item
                    {
                        <div class="area-item-wrapper d-flex align-items-center mb-3 covid-item">
                            <span  class="d-flex align-items-center justify-content-center" style="background-color: #f14747";>
                                <svg aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 512 512"><path d="M224 192a16 16 0 1 0 16 16a16 16 0 0 0-16-16zM466.5 83.68l-192-80A57.4 57.4 0 0 0 256.05 0a57.4 57.4 0 0 0-18.46 3.67l-192 80A47.93 47.93 0 0 0 16 128c0 198.5 114.5 335.72 221.5 380.32a48.09 48.09 0 0 0 36.91 0C360.09 472.61 496 349.3 496 128a48 48 0 0 0-29.5-44.32zM384 256h-12.12c-28.51 0-42.79 34.47-22.63 54.63l8.58 8.57a16 16 0 1 1-22.63 22.63l-8.57-8.58c-20.16-20.16-54.63-5.88-54.63 22.63V368a16 16 0 0 1-32 0v-12.12c0-28.51-34.47-42.79-54.63-22.63l-8.57 8.58a16 16 0 0 1-22.63-22.63l8.58-8.57c20.16-20.16 5.88-54.63-22.63-54.63H128a16 16 0 0 1 0-32h12.12c28.51 0 42.79-34.47 22.63-54.63l-8.58-8.57a16 16 0 0 1 22.63-22.63l8.57 8.58c20.16 20.16 54.63 5.88 54.63-22.63V112a16 16 0 0 1 32 0v12.12c0 28.51 34.47 42.79 54.63 22.63l8.57-8.58a16 16 0 0 1 22.63 22.63l-8.58 8.57c-20.16 20.16-5.88 54.63 22.63 54.63H384a16 16 0 0 1 0 32zm-96 0a16 16 0 1 0 16 16a16 16 0 0 0-16-16z" fill="currentColor" /></svg>
                            </span>

                            <p @onclick=" () => ChangeState(id)" class="mb-0 ms-2 @(choosenAreasList[id] ? "colored-red" : "")">COVID-19</p>
                        </div>
                    }
                    else
                    {
                        <div class="area-item-wrapper d-flex align-items-center mb-3">
                            <span @onclick=" () => ChangeState(id)" class="material-icons-outlined d-flex align-items-center justify-content-center">
                                people
                            </span>
                            <p @onclick=" () => ChangeState(id)" class="mb-0 ms-2 @(choosenAreasList[id] ? "colored-green" : "")">Cộng đồng @(i+1)</p>
                        </div>
                    }
                }
            </div>
        </div>
        <div @onclick="SaveModal" class="save-btn d-flex justify-content-center align-items-center">Lưu</div>

    </div>
</div>

@code {

    [Parameter]
    public bool[] choosenAreasList { get; set; }
    int numberOfItems = 13;

    //create a curent list incase user click close button but don't save
    bool[] boolArray = new bool[13];
    protected override async Task OnInitializedAsync()
    {
        for (int a = 0; a < numberOfItems; a++)
        {
            boolArray[a] = choosenAreasList[a];
        }
    }
    void ChangeState(int id)
    {
        choosenAreasList[id] = !choosenAreasList[id];
    }

    [CascadingParameter]
    private BlazoredModalInstance AreasModal { get; set; }
    void CloseModal()
    {
        for (int j = 0; j < numberOfItems; j++)
        {
            if (choosenAreasList[j] && boolArray[j] == false)
            {
                choosenAreasList[j] = false;
            }
            if (choosenAreasList[j] == false && boolArray[j])
            {
                choosenAreasList[j] = true;
            }
        }
        AreasModal.CloseAsync();

    }

    void SaveModal()
    {
        choosenAreasList = boolArray;
        AreasModal.CloseAsync();
    }
}

<div class="pop-up">
    <div class="center-screen">
        <div class="pop-up-container border-10 @(!isApproveSuccess ? "d-block" : "d-none")">
            <div @onclick="CloseModalAsync" class="close-btn">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="content">
                <h3 class="mb-3"><span>Duyệt </span>hoạt động</h3>
                <div>
                    <div class=" d-flex align-items-center div-checkbox">
                        <input @bind-value = "@isPoint" id="pointTraining" class="check-box" type="checkbox">
                        <label for="pointTraining" class="ms-2">Cập nhật mã vạch</label>
                    </div>
                    <div class=" d-flex align-items-center div-checkbox">
                        <input @bind-value = "@isDay" id="dayVolunteer" class="check-box" type="checkbox">
                        <label for="dayVolunteer" class="ms-2">Ghi nhận ngày tình nguyện</label>
                        <input @bind-value = "@numberOfDay"  type="number" class="form-control input-number"/>
                    </div>
                </div>
            </div>
            <div class="pop-up-btn">
                <div @onclick="ApproveSuccessAsync" class="btn accept px-0 mx-auto">Duyệt</div>
            </div>
        </div>

        <div class="pop-up-container border-10 @(!isApproveSuccess ? "d-none" : "d-block")">
            <div @onclick="CloseModalAsync" class="close-btn-s">
                <span class="material-icons">
                    close
                </span>
            </div>
            <div class="pop-up-content">
                <h3>Bạn đã <span>duyệt hoạt động</span></h3>
                <h3>thành công</h3>
            </div>
        </div>
    </div>
</div>

@code {
    private bool isApproveSuccess;
    private bool isPoint = false;
    private bool isDay = false;
    private int numberOfDay = 0;
    List<object> result = new();
    [CascadingParameter]
    public BlazoredModalInstance Modal { get; set; }

    private async Task CloseModalAsync()
    {
        await Modal.CloseAsync();
    }

    private async Task ApproveSuccessAsync()
    {
        result.Add(isPoint);
        result.Add(isDay);
        result.Add(numberOfDay);
        isApproveSuccess = true;
        await Modal.CloseAsync(ModalResult.Ok(result));
    }


}

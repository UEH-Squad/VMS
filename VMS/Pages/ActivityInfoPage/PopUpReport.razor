@inject IJSRuntime JSRuntinme

<div class="overlay">

    <div class="min-overlay @(isShowReport ? "d-block" : "d-none")">
        <div class="report-success">

            <div class="min-overlay--icon">
                <span @onclick="ShowModalReportSucess" class="material-icons">
                    close
                </span>
            </div>

            <div class="report-success__text">
                <span class="green-text">Bạn đã</span>
                <span class="blue-text">báo cáo thành công</span>
            </div>

        </div>
    </div>
    <EditForm Model="@reportModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="container @(isShowReport ? "d-none" : "d-block")">
            <div class="icon-close-popup">
                <span @onclick="CloseModal" class="material-icons">close</span>
            </div>


            <div class="title-header">
                <span class="title-header__report">Báo cáo</span>
                <span class="title-header__activity">hoạt động</span>
            </div>

            <div class="reporting-reason dropdown">
                <div class="title title-reason">
                    <h4 class="title-discript__text">Lý do bạn muốn báo cáo</h4>
                    <h4 class="title-discript__check check">(*)</h4>
                </div>
                <button @onclick="ListReason" class="btn my-btn" type="button" id="dropdownMenuButton1" data-bs-toggle="" aria-expanded="false">
                    <span class="material-icons-outlined my-icon-dropdown">
                        arrow_drop_down
                    </span>
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1" style="display:@(showListReason ? "block" : "none")">
                    <li>
                        <div class="dropdown-item" href="#">
                            <InputCheckbox @bind-Value="reportReason.Reason1" type="checkbox" id="checkbox-1" class="dropdown-item--checkbox"/>
                            <label for="checkbox-1">Hoạt động không có thật</label>
                        </div>
                    </li>
                    <li>
                        <div class="dropdown-item" href="#">
                            <InputCheckbox @bind-Value="reportReason.Reason2" type="checkbox" id="checkbox-2" class="dropdown-item--checkbox"/>
                            <label for="checkbox-2">Hoạt động không không tương thích với nội dung đã đề cập</label>
                        </div>
                    </li>
                    <li>
                        <div class="dropdown-item" href="#">
                            <InputCheckbox @bind-Value="reportReason.Reason3" type="checkbox" id="checkbox-3" class="dropdown-item--checkbox"/>
                            <label for="checkbox-3">Hình ảnh, video không phù hợp/không liên quan tới nội dung hoạt động</label>
                        </div>
                    </li>
                    <li>
                        <div class="dropdown-item" href="#">
                            <InputCheckbox @bind-Value="reportReason.Reason4" type="checkbox" id="checkbox-4" class="dropdown-item--checkbox"/>
                            <label for="checkbox-4">Nội dung hoạt động không phù hợp</label>
                        </div>
                    </li>
                    <li>
                        <div class="dropdown-item" href="#">
                            <InputCheckbox @bind-Value="reportReason.Reason5" type="checkbox" id="checkbox-5" class="dropdown-item--checkbox"/>
                            <label for="checkbox-5">Lĩnh vực và kỹ năng không phù hợp với nội dung hoạt động</label>
                        </div>
                    </li>
                    <li>
                        <div class="dropdown-item" href="#">
                            <InputCheckbox @bind-Value="reportReason.Reason6" type="checkbox" id="checkbox-6" class="dropdown-item--checkbox"/>
                            <label for="checkbox-6">Khác</label>
                        </div>
                    </li>
                </ul>
            </div>

            <div class="report-description mb-3">
                <div class="title title-discript">
                    <h4 class="title-discript__text">Mô tả về báo cáo</h4>
                    <h4 class="title-discript__check check">(*)</h4>
                </div>
                <InputTextArea @bind-Value="@reportModel.Discript" @onclick="TextArea" class="form-control" id="exampleFormControlTextarea1" rows=""></InputTextArea>
            </div>

            <div class="attached-proof">
                <div class="title title-attach">
                    <h4 class="title-attach__text">Minh chứng đính kèm</h4>
                    <h4 class="title-attach__check check"> (*)</h4>
                </div>
                <div class="add-file">
                    <InputFile @onclick="AddFile" type="file" name="file" id="file" class="inputfile" />
                    <label class="d-flex align-items-center justify-content-center" for="file">
                        <span class="block-icon-text">
                            <span class="material-icons my-icon-upload">cloud_upload</span>
                            <span class="file__text d-flex align-items-center">Kéo hoặc thả hình ảnh liên quan tại đây</span>
                        </span>
                    </label>
                </div>
            </div>

            <div class="btn-accept">
                <button @onclick="ShowModalReportSucess" type="submit" class="btn" data-bs-toggle="modal" data-bs-target="#exampleModal1">
                    Báo cáo hoạt động
                </button>
            </div>
        </div>
    </EditForm>
</div>

@code {
    [CascadingParameter]
    private BlazoredModalInstance ReportModal { get; set; }
    void CloseModal()
    {
        ReportModal.CloseAsync();
    }

    bool isShowReport = false;
    void ShowModalReportSucess()
    {
        isShowReport = !isShowReport;
        if (isShowReport == false)
        {
            ReportModal.CloseAsync();
        }
    }
    public class ReportModel
    {
        public string Discript { get; set; }
        public string FileName { get; set; }
    }
    private ReportModel reportModel = new();
    private void HandleValidSubmit()
    {

    }
    bool showListReason = false;
    void ListReason()
    {
        showListReason = !showListReason;
    }
    void TextArea()
    {
        showListReason = false;
    }
    void AddFile()
    {
        showListReason = false;
    }
    public class ReportReason
    {
        public bool Reason1 { get; set; }
        public bool Reason2 { get; set; }
        public bool Reason3 { get; set; }
        public bool Reason4 { get; set; }
        public bool Reason5 { get; set; }
        public bool Reason6 { get; set; }
    }
    private ReportReason reportReason = new();
}

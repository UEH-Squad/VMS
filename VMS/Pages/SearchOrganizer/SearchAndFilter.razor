<div class="@(HaveSearchBox ? "d-block" : "d-none")">
    <h3 class="text-center my-5">Tìm kiếm <span>Đơn vị tổ chức</span></h3>
</div>
@* search box component *@
<div class="col-lg-8 @(HaveSearchBox ? "d-block" : "d-none")">
    <VMS.Pages.ActivitySearchPage.SearchBox />
</div>

<p class="mt-5 @(HaveSearchBox ? "d-block" : "d-none")">Lọc tổ chức</p>

<div class="filter-bar d-flex @(IsLongDistanceFilter?"justify-content-between":"") my-4">
    <div class="d-flex me-3" style="width: @(IsLongDistanceFilter? 40 : 50)%;">
        <div class="filter-item position-relative me-3">
        <input @onclick="ToggleLevelDropdown" @onfocusout="CloseLevelDropdown" class="popup-btn @(isLevelGrey ? "bg-grey" : "")" placeholder="@levelChoosenValue" readonly />
        <div @onclick:preventDefault class="my-dropdown" style="display: @(isLevelShow ? "block" : "none")">
            <ul>
                @if (levels is not null)
                {
                    @foreach (var level in levels)
                    {
                        <li @onmousedown="() => ChooseLevelValue(level)">@level.Name</li>
                    }
                }
            </ul>
        </div>
        <span class="material-icons-outlined position-absolute filter-item__icon">
            expand_more
        </span>
    </div>

        <div class="filter-item position-relative">
            <div @onclick="ShowAreasPopupAsync" class="popup-btn @(areas.Count != 0 ? "bg-grey" : "")">Lĩnh vực</div>
            <span class="material-icons-outlined position-absolute filter-item__icon">
                expand_more
            </span>
        </div>
    </div>
    <div class="d-flex">
        <button @onclick="UpdateFilterValueAsync" class="filter-btn me-3">Lọc</button>
        <button @onclick="ClearFilter" type="button" class="clear-filter-btn">Xóa lọc</button>
    </div>
</div>
@code {
    [Parameter]
    public bool HaveSearchBox { get; set; }

    [Parameter]
    public bool IsLongDistanceFilter { get; set; }
}

@*@inject IJSRuntime JSRuntinme;*@

@inject IInfoActivityService InfoActivityService
@inject IActivityService ActivityService

@using VMS.Application.ViewModels
@using VMS.Application.Interfaces

@if (otherActivities is not null && otherActivities.Count != 0)
{
    <section class="other-act">
        <div class="other-act__title">
            <h3>Hoạt động khác <span>của tổ chức</span></h3>
            <hr>
        </div>
        <div class="owl-carousel owl-theme">
            @foreach (var item in otherActivities)
            {
                @if (item.ActivityId != int.Parse(ActivityId) && item.ActivityOrgId == activity.OrgId)
                {
                    <div class="act__container__card" id="kiemtra">
                        <div class="act__container__card__img">
                            @*<img src="@item.Banner" alt="photo">*@
                            <img src="img/AcitivitiesInfo/ki-niem-tinh-nguyen-vien.jpg" alt="photo">
                        </div>
                        <div class="act__container__card__desc">
                            <p>@item.ActivityName</p>
                        </div>
                        @*<div class="act__container__card__icon">
                                <div class="@(item.IsFav ? "heart" : "heart-line")" @onclick="@(() => AnimateHeart(item.Id))">
                                    <span class="material-icons">favorite</span>
                                </div>
                            </div>*@
                    </div>
                }
            }
        </div>
    </section>
}

@code {

    //private class FakeData
    //{
    //    public int Id { get; set; }
    //    public string Title { get; set; }
    //    public string Banner { get; set; }
    //    public bool IsFav { get; set; }
    //}

    //private List<FakeData> fakeData = new();

    //private void AnimateHeart(int id)
    //{
    //    var item = fakeData.FirstOrDefault(x => x.Id == id);
    //    item.IsFav = true;
    //}

    //protected override async Task OnInitializedAsync()
    //{
    //    fakeData.AddRange(Enumerable.Range(0, 7).Select(x => new FakeData
    //    {
    //        Id = x,
    //        Title = "Tình nguyện viên tham gia hỗ trợ công tác phòng, chống dịch Covid-19",
    //        Banner = "img/AcitivitiesInfo/ki-niem-tinh-nguyen-vien.jpg",
    //        IsFav = false
    //    }));
    //}

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    await JSRuntinme.InvokeVoidAsync("vms.OtherAct");
    //}

    private ViewActivityViewModel activity;
    private List<InfoActivityViewModel> otherActivities;

    [Parameter]
    public string ActivityId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        activity = await ActivityService.GetViewActivityViewModelAsync(int.Parse(ActivityId));
        otherActivities = await InfoActivityService.GetInfoActivity();
    }

}